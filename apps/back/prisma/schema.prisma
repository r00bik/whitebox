// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Модель пользователя
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Связи
  contacts        Contact[] @relation("UserContacts") // Контакты, которыми владеет пользователь
  contactedByUsers Contact[] @relation("ContactUser")  // Кто добавил этого пользователя в контакты

  @@map("users")
}

// Модель контакта - связь между пользователями
model Contact {
  id            String   @id @default(cuid())
  userId        String   // FK к User - владелец контакта
  contactUserId String   // FK к User - на кого ссылается контакт
  notes         String?  // Личные заметки о контакте
  tags          String[] // Массив тегов для категоризации
  isActive      Boolean  @default(true) // Флаг активности для soft delete
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Связи
  user          User     @relation("UserContacts", fields: [userId], references: [id], onDelete: Cascade)
  contactUser   User     @relation("ContactUser", fields: [contactUserId], references: [id], onDelete: Cascade)

  @@unique([userId, contactUserId]) // Один пользователь не может добавить другого дважды
  @@map("contacts")
  @@index([userId])
  @@index([userId, isActive]) // Индекс для быстрой фильтрации активных контактов
}

// Роли пользователей
enum UserRole {
  USER
  ADMIN
}
